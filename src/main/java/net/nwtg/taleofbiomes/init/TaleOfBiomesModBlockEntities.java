
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.nwtg.taleofbiomes.init;

import net.nwtg.taleofbiomes.block.entity.WindowBlueprintBlockEntity;
import net.nwtg.taleofbiomes.block.entity.WallBlueprintBlockEntity;
import net.nwtg.taleofbiomes.block.entity.TilledSoilBlockEntity;
import net.nwtg.taleofbiomes.block.entity.SolarPannelBlockEntity;
import net.nwtg.taleofbiomes.block.entity.RoseShrubBlockEntity;
import net.nwtg.taleofbiomes.block.entity.RiceCrop7BlockEntity;
import net.nwtg.taleofbiomes.block.entity.RiceCrop6BlockEntity;
import net.nwtg.taleofbiomes.block.entity.RiceCrop5BlockEntity;
import net.nwtg.taleofbiomes.block.entity.RiceCrop4BlockEntity;
import net.nwtg.taleofbiomes.block.entity.RiceCrop3BlockEntity;
import net.nwtg.taleofbiomes.block.entity.RiceCrop2BlockEntity;
import net.nwtg.taleofbiomes.block.entity.RiceCrop1BlockEntity;
import net.nwtg.taleofbiomes.block.entity.RiceCrop0BlockEntity;
import net.nwtg.taleofbiomes.block.entity.PlotBlueprintBlockEntity;
import net.nwtg.taleofbiomes.block.entity.PiruffSaplingBlockEntity;
import net.nwtg.taleofbiomes.block.entity.PhosphoriteStoneBlockEntity;
import net.nwtg.taleofbiomes.block.entity.PhosphoriteCrystalBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableXCBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableXBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableTXCCBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableTXCBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableTXBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableTCBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableTBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableSBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableNBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableLTCBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableLTBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableLCCBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableLCBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableLBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableIBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableFBlockEntity;
import net.nwtg.taleofbiomes.block.entity.LowCapacityCableEBlockEntity;
import net.nwtg.taleofbiomes.block.entity.KilnLadderBlockEntity;
import net.nwtg.taleofbiomes.block.entity.KilnFurnaceOnBlockEntity;
import net.nwtg.taleofbiomes.block.entity.KilnFurnaceBlockEntity;
import net.nwtg.taleofbiomes.block.entity.KilnBlockMiddleTopBlockEntity;
import net.nwtg.taleofbiomes.block.entity.KilnBlockMiddleCenterBlockEntity;
import net.nwtg.taleofbiomes.block.entity.KilnBlockMiddleBottomBlockEntity;
import net.nwtg.taleofbiomes.block.entity.KilnBlockFoundationBlockEntity;
import net.nwtg.taleofbiomes.block.entity.KilnBlockCornerTopBlockEntity;
import net.nwtg.taleofbiomes.block.entity.KilnBlockCornerCenterBlockEntity;
import net.nwtg.taleofbiomes.block.entity.KilnBlockCornerBottomBlockEntity;
import net.nwtg.taleofbiomes.block.entity.IvyShrubBlockEntity;
import net.nwtg.taleofbiomes.block.entity.HayStrawBlockEntity;
import net.nwtg.taleofbiomes.block.entity.HayGrassBlockEntity;
import net.nwtg.taleofbiomes.block.entity.HangingLanternOnBlockEntity;
import net.nwtg.taleofbiomes.block.entity.HangingLanternBlockEntity;
import net.nwtg.taleofbiomes.block.entity.GroundLanternOnBlockEntity;
import net.nwtg.taleofbiomes.block.entity.GroundLanternBlockEntity;
import net.nwtg.taleofbiomes.block.entity.GrassBlockBlockEntity;
import net.nwtg.taleofbiomes.block.entity.DrillBlockEntity;
import net.nwtg.taleofbiomes.block.entity.DoorBlueprintBlockEntity;
import net.nwtg.taleofbiomes.block.entity.CopperBattery4BlockEntity;
import net.nwtg.taleofbiomes.block.entity.CopperBattery3BlockEntity;
import net.nwtg.taleofbiomes.block.entity.CopperBattery2BlockEntity;
import net.nwtg.taleofbiomes.block.entity.CopperBattery1BlockEntity;
import net.nwtg.taleofbiomes.block.entity.CopperBattery0BlockEntity;
import net.nwtg.taleofbiomes.block.entity.BasicToolTableBlockEntity;
import net.nwtg.taleofbiomes.block.entity.BasicStoneTableBlockEntity;
import net.nwtg.taleofbiomes.TaleOfBiomesMod;

import net.neoforged.neoforge.registries.DeferredRegister;
import net.neoforged.neoforge.registries.DeferredHolder;
import net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent;
import net.neoforged.neoforge.capabilities.Capabilities;
import net.neoforged.fml.common.Mod;
import net.neoforged.bus.api.SubscribeEvent;

import net.minecraft.world.level.block.entity.BlockEntityType;
import net.minecraft.world.level.block.Block;
import net.minecraft.core.registries.BuiltInRegistries;

@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD)
public class TaleOfBiomesModBlockEntities {
	public static final DeferredRegister<BlockEntityType<?>> REGISTRY = DeferredRegister.create(BuiltInRegistries.BLOCK_ENTITY_TYPE, TaleOfBiomesMod.MODID);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> GRASS_BLOCK = register("grass_block", TaleOfBiomesModBlocks.GRASS_BLOCK, GrassBlockBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> TILLED_SOIL = register("tilled_soil", TaleOfBiomesModBlocks.TILLED_SOIL, TilledSoilBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> IVY_SHRUB = register("ivy_shrub", TaleOfBiomesModBlocks.IVY_SHRUB, IvyShrubBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> ROSE_SHRUB = register("rose_shrub", TaleOfBiomesModBlocks.ROSE_SHRUB, RoseShrubBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> PHOSPHORITE_STONE = register("phosphorite_stone", TaleOfBiomesModBlocks.PHOSPHORITE_STONE, PhosphoriteStoneBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> PHOSPHORITE_CRYSTAL = register("phosphorite_crystal", TaleOfBiomesModBlocks.PHOSPHORITE_CRYSTAL, PhosphoriteCrystalBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> KILN_FURNACE = register("kiln_furnace", TaleOfBiomesModBlocks.KILN_FURNACE, KilnFurnaceBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> KILN_FURNACE_ON = register("kiln_furnace_on", TaleOfBiomesModBlocks.KILN_FURNACE_ON, KilnFurnaceOnBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> KILN_LADDER = register("kiln_ladder", TaleOfBiomesModBlocks.KILN_LADDER, KilnLadderBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> KILN_BLOCK_CORNER_BOTTOM = register("kiln_block_corner_bottom", TaleOfBiomesModBlocks.KILN_BLOCK_CORNER_BOTTOM, KilnBlockCornerBottomBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> KILN_BLOCK_CORNER_CENTER = register("kiln_block_corner_center", TaleOfBiomesModBlocks.KILN_BLOCK_CORNER_CENTER, KilnBlockCornerCenterBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> KILN_BLOCK_CORNER_TOP = register("kiln_block_corner_top", TaleOfBiomesModBlocks.KILN_BLOCK_CORNER_TOP, KilnBlockCornerTopBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> KILN_BLOCK_MIDDLE_BOTTOM = register("kiln_block_middle_bottom", TaleOfBiomesModBlocks.KILN_BLOCK_MIDDLE_BOTTOM, KilnBlockMiddleBottomBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> KILN_BLOCK_MIDDLE_CENTER = register("kiln_block_middle_center", TaleOfBiomesModBlocks.KILN_BLOCK_MIDDLE_CENTER, KilnBlockMiddleCenterBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> KILN_BLOCK_MIDDLE_TOP = register("kiln_block_middle_top", TaleOfBiomesModBlocks.KILN_BLOCK_MIDDLE_TOP, KilnBlockMiddleTopBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> KILN_BLOCK_FOUNDATION = register("kiln_block_foundation", TaleOfBiomesModBlocks.KILN_BLOCK_FOUNDATION, KilnBlockFoundationBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> RICE_CROP_0 = register("rice_crop_0", TaleOfBiomesModBlocks.RICE_CROP_0, RiceCrop0BlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> RICE_CROP_1 = register("rice_crop_1", TaleOfBiomesModBlocks.RICE_CROP_1, RiceCrop1BlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> RICE_CROP_2 = register("rice_crop_2", TaleOfBiomesModBlocks.RICE_CROP_2, RiceCrop2BlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> RICE_CROP_3 = register("rice_crop_3", TaleOfBiomesModBlocks.RICE_CROP_3, RiceCrop3BlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> RICE_CROP_4 = register("rice_crop_4", TaleOfBiomesModBlocks.RICE_CROP_4, RiceCrop4BlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> RICE_CROP_5 = register("rice_crop_5", TaleOfBiomesModBlocks.RICE_CROP_5, RiceCrop5BlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> RICE_CROP_6 = register("rice_crop_6", TaleOfBiomesModBlocks.RICE_CROP_6, RiceCrop6BlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> RICE_CROP_7 = register("rice_crop_7", TaleOfBiomesModBlocks.RICE_CROP_7, RiceCrop7BlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> HAY_GRASS = register("hay_grass", TaleOfBiomesModBlocks.HAY_GRASS, HayGrassBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> HAY_STRAW = register("hay_straw", TaleOfBiomesModBlocks.HAY_STRAW, HayStrawBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> PLOT_BLUEPRINT = register("plot_blueprint", TaleOfBiomesModBlocks.PLOT_BLUEPRINT, PlotBlueprintBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> WALL_BLUEPRINT = register("wall_blueprint", TaleOfBiomesModBlocks.WALL_BLUEPRINT, WallBlueprintBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> DOOR_BLUEPRINT = register("door_blueprint", TaleOfBiomesModBlocks.DOOR_BLUEPRINT, DoorBlueprintBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> WINDOW_BLUEPRINT = register("window_blueprint", TaleOfBiomesModBlocks.WINDOW_BLUEPRINT, WindowBlueprintBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> HANGING_LANTERN = register("hanging_lantern", TaleOfBiomesModBlocks.HANGING_LANTERN, HangingLanternBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> HANGING_LANTERN_ON = register("hanging_lantern_on", TaleOfBiomesModBlocks.HANGING_LANTERN_ON, HangingLanternOnBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> GROUND_LANTERN = register("ground_lantern", TaleOfBiomesModBlocks.GROUND_LANTERN, GroundLanternBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> GROUND_LANTERN_ON = register("ground_lantern_on", TaleOfBiomesModBlocks.GROUND_LANTERN_ON, GroundLanternOnBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> BASIC_TOOL_TABLE = register("basic_tool_table", TaleOfBiomesModBlocks.BASIC_TOOL_TABLE, BasicToolTableBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_N = register("low_capacity_cable_n", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_N, LowCapacityCableNBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_E = register("low_capacity_cable_e", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_E, LowCapacityCableEBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_I = register("low_capacity_cable_i", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_I, LowCapacityCableIBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_L = register("low_capacity_cable_l", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_L, LowCapacityCableLBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_LC = register("low_capacity_cable_lc", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_LC, LowCapacityCableLCBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_LCC = register("low_capacity_cable_lcc", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_LCC, LowCapacityCableLCCBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_LT = register("low_capacity_cable_lt", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_LT, LowCapacityCableLTBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_LTC = register("low_capacity_cable_ltc", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_LTC, LowCapacityCableLTCBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_T = register("low_capacity_cable_t", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_T, LowCapacityCableTBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_TC = register("low_capacity_cable_tc", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_TC, LowCapacityCableTCBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_TX = register("low_capacity_cable_tx", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_TX, LowCapacityCableTXBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_TXC = register("low_capacity_cable_txc", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_TXC, LowCapacityCableTXCBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_TXCC = register("low_capacity_cable_txcc", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_TXCC, LowCapacityCableTXCCBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_X = register("low_capacity_cable_x", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_X, LowCapacityCableXBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_XC = register("low_capacity_cable_xc", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_XC, LowCapacityCableXCBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_F = register("low_capacity_cable_f", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_F, LowCapacityCableFBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> LOW_CAPACITY_CABLE_S = register("low_capacity_cable_s", TaleOfBiomesModBlocks.LOW_CAPACITY_CABLE_S, LowCapacityCableSBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> SOLAR_PANNEL = register("solar_pannel", TaleOfBiomesModBlocks.SOLAR_PANNEL, SolarPannelBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> PIRUFF_SAPLING = register("piruff_sapling", TaleOfBiomesModBlocks.PIRUFF_SAPLING, PiruffSaplingBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> COPPER_BATTERY_0 = register("copper_battery_0", TaleOfBiomesModBlocks.COPPER_BATTERY_0, CopperBattery0BlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> COPPER_BATTERY_1 = register("copper_battery_1", TaleOfBiomesModBlocks.COPPER_BATTERY_1, CopperBattery1BlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> COPPER_BATTERY_2 = register("copper_battery_2", TaleOfBiomesModBlocks.COPPER_BATTERY_2, CopperBattery2BlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> COPPER_BATTERY_3 = register("copper_battery_3", TaleOfBiomesModBlocks.COPPER_BATTERY_3, CopperBattery3BlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> COPPER_BATTERY_4 = register("copper_battery_4", TaleOfBiomesModBlocks.COPPER_BATTERY_4, CopperBattery4BlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> DRILL = register("drill", TaleOfBiomesModBlocks.DRILL, DrillBlockEntity::new);
	public static final DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> BASIC_STONE_TABLE = register("basic_stone_table", TaleOfBiomesModBlocks.BASIC_STONE_TABLE, BasicStoneTableBlockEntity::new);

	private static DeferredHolder<BlockEntityType<?>, BlockEntityType<?>> register(String registryname, DeferredHolder<Block, Block> block, BlockEntityType.BlockEntitySupplier<?> supplier) {
		return REGISTRY.register(registryname, () -> BlockEntityType.Builder.of(supplier, block.get()).build(null));
	}

	@SubscribeEvent
	public static void registerCapabilities(RegisterCapabilitiesEvent event) {
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, GRASS_BLOCK.get(), (blockEntity, side) -> ((GrassBlockBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, TILLED_SOIL.get(), (blockEntity, side) -> ((TilledSoilBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, IVY_SHRUB.get(), (blockEntity, side) -> ((IvyShrubBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, ROSE_SHRUB.get(), (blockEntity, side) -> ((RoseShrubBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, PHOSPHORITE_STONE.get(), (blockEntity, side) -> ((PhosphoriteStoneBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, PHOSPHORITE_CRYSTAL.get(), (blockEntity, side) -> ((PhosphoriteCrystalBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, KILN_FURNACE.get(), (blockEntity, side) -> ((KilnFurnaceBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, KILN_FURNACE_ON.get(), (blockEntity, side) -> ((KilnFurnaceOnBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, KILN_LADDER.get(), (blockEntity, side) -> ((KilnLadderBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, KILN_BLOCK_CORNER_BOTTOM.get(), (blockEntity, side) -> ((KilnBlockCornerBottomBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, KILN_BLOCK_CORNER_CENTER.get(), (blockEntity, side) -> ((KilnBlockCornerCenterBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, KILN_BLOCK_CORNER_TOP.get(), (blockEntity, side) -> ((KilnBlockCornerTopBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, KILN_BLOCK_MIDDLE_BOTTOM.get(), (blockEntity, side) -> ((KilnBlockMiddleBottomBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, KILN_BLOCK_MIDDLE_CENTER.get(), (blockEntity, side) -> ((KilnBlockMiddleCenterBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, KILN_BLOCK_MIDDLE_TOP.get(), (blockEntity, side) -> ((KilnBlockMiddleTopBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, KILN_BLOCK_FOUNDATION.get(), (blockEntity, side) -> ((KilnBlockFoundationBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, RICE_CROP_0.get(), (blockEntity, side) -> ((RiceCrop0BlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, RICE_CROP_1.get(), (blockEntity, side) -> ((RiceCrop1BlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, RICE_CROP_2.get(), (blockEntity, side) -> ((RiceCrop2BlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, RICE_CROP_3.get(), (blockEntity, side) -> ((RiceCrop3BlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, RICE_CROP_4.get(), (blockEntity, side) -> ((RiceCrop4BlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, RICE_CROP_5.get(), (blockEntity, side) -> ((RiceCrop5BlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, RICE_CROP_6.get(), (blockEntity, side) -> ((RiceCrop6BlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, RICE_CROP_7.get(), (blockEntity, side) -> ((RiceCrop7BlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, HAY_GRASS.get(), (blockEntity, side) -> ((HayGrassBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, HAY_STRAW.get(), (blockEntity, side) -> ((HayStrawBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, PLOT_BLUEPRINT.get(), (blockEntity, side) -> ((PlotBlueprintBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, WALL_BLUEPRINT.get(), (blockEntity, side) -> ((WallBlueprintBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, DOOR_BLUEPRINT.get(), (blockEntity, side) -> ((DoorBlueprintBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, WINDOW_BLUEPRINT.get(), (blockEntity, side) -> ((WindowBlueprintBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, HANGING_LANTERN.get(), (blockEntity, side) -> ((HangingLanternBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, HANGING_LANTERN_ON.get(), (blockEntity, side) -> ((HangingLanternOnBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, GROUND_LANTERN.get(), (blockEntity, side) -> ((GroundLanternBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, GROUND_LANTERN_ON.get(), (blockEntity, side) -> ((GroundLanternOnBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, BASIC_TOOL_TABLE.get(), (blockEntity, side) -> ((BasicToolTableBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_N.get(), (blockEntity, side) -> ((LowCapacityCableNBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_N.get(), (blockEntity, side) -> ((LowCapacityCableNBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_E.get(), (blockEntity, side) -> ((LowCapacityCableEBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_E.get(), (blockEntity, side) -> ((LowCapacityCableEBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_I.get(), (blockEntity, side) -> ((LowCapacityCableIBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_I.get(), (blockEntity, side) -> ((LowCapacityCableIBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_L.get(), (blockEntity, side) -> ((LowCapacityCableLBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_L.get(), (blockEntity, side) -> ((LowCapacityCableLBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_LC.get(), (blockEntity, side) -> ((LowCapacityCableLCBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_LC.get(), (blockEntity, side) -> ((LowCapacityCableLCBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_LCC.get(), (blockEntity, side) -> ((LowCapacityCableLCCBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_LCC.get(), (blockEntity, side) -> ((LowCapacityCableLCCBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_LT.get(), (blockEntity, side) -> ((LowCapacityCableLTBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_LT.get(), (blockEntity, side) -> ((LowCapacityCableLTBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_LTC.get(), (blockEntity, side) -> ((LowCapacityCableLTCBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_LTC.get(), (blockEntity, side) -> ((LowCapacityCableLTCBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_T.get(), (blockEntity, side) -> ((LowCapacityCableTBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_T.get(), (blockEntity, side) -> ((LowCapacityCableTBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_TC.get(), (blockEntity, side) -> ((LowCapacityCableTCBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_TC.get(), (blockEntity, side) -> ((LowCapacityCableTCBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_TX.get(), (blockEntity, side) -> ((LowCapacityCableTXBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_TX.get(), (blockEntity, side) -> ((LowCapacityCableTXBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_TXC.get(), (blockEntity, side) -> ((LowCapacityCableTXCBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_TXC.get(), (blockEntity, side) -> ((LowCapacityCableTXCBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_TXCC.get(), (blockEntity, side) -> ((LowCapacityCableTXCCBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_TXCC.get(), (blockEntity, side) -> ((LowCapacityCableTXCCBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_X.get(), (blockEntity, side) -> ((LowCapacityCableXBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_X.get(), (blockEntity, side) -> ((LowCapacityCableXBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_XC.get(), (blockEntity, side) -> ((LowCapacityCableXCBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_XC.get(), (blockEntity, side) -> ((LowCapacityCableXCBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_F.get(), (blockEntity, side) -> ((LowCapacityCableFBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_F.get(), (blockEntity, side) -> ((LowCapacityCableFBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, LOW_CAPACITY_CABLE_S.get(), (blockEntity, side) -> ((LowCapacityCableSBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, LOW_CAPACITY_CABLE_S.get(), (blockEntity, side) -> ((LowCapacityCableSBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, SOLAR_PANNEL.get(), (blockEntity, side) -> ((SolarPannelBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, SOLAR_PANNEL.get(), (blockEntity, side) -> ((SolarPannelBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, PIRUFF_SAPLING.get(), (blockEntity, side) -> ((PiruffSaplingBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, COPPER_BATTERY_0.get(), (blockEntity, side) -> ((CopperBattery0BlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, COPPER_BATTERY_0.get(), (blockEntity, side) -> ((CopperBattery0BlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, COPPER_BATTERY_1.get(), (blockEntity, side) -> ((CopperBattery1BlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, COPPER_BATTERY_1.get(), (blockEntity, side) -> ((CopperBattery1BlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, COPPER_BATTERY_2.get(), (blockEntity, side) -> ((CopperBattery2BlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, COPPER_BATTERY_2.get(), (blockEntity, side) -> ((CopperBattery2BlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, COPPER_BATTERY_3.get(), (blockEntity, side) -> ((CopperBattery3BlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, COPPER_BATTERY_3.get(), (blockEntity, side) -> ((CopperBattery3BlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, COPPER_BATTERY_4.get(), (blockEntity, side) -> ((CopperBattery4BlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, COPPER_BATTERY_4.get(), (blockEntity, side) -> ((CopperBattery4BlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, DRILL.get(), (blockEntity, side) -> ((DrillBlockEntity) blockEntity).getItemHandler());
		event.registerBlockEntity(Capabilities.EnergyStorage.BLOCK, DRILL.get(), (blockEntity, side) -> ((DrillBlockEntity) blockEntity).getEnergyStorage());
		event.registerBlockEntity(Capabilities.ItemHandler.BLOCK, BASIC_STONE_TABLE.get(), (blockEntity, side) -> ((BasicStoneTableBlockEntity) blockEntity).getItemHandler());
	}
}
