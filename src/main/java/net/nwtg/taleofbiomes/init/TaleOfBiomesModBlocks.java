
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.nwtg.taleofbiomes.init;

import net.nwtg.taleofbiomes.block.YellowPiruffBedTopBlock;
import net.nwtg.taleofbiomes.block.YellowPiruffBedBlock;
import net.nwtg.taleofbiomes.block.WindowBlueprintBlock;
import net.nwtg.taleofbiomes.block.WildIndigoFlowerPotBlock;
import net.nwtg.taleofbiomes.block.WildIndigoBlock;
import net.nwtg.taleofbiomes.block.WallBlueprintBlock;
import net.nwtg.taleofbiomes.block.UnpureCopperDustBlockBlock;
import net.nwtg.taleofbiomes.block.ToolHandleBlockBlock;
import net.nwtg.taleofbiomes.block.TilledSoilBlock;
import net.nwtg.taleofbiomes.block.ThatchStairsBlock;
import net.nwtg.taleofbiomes.block.ThatchSlabBlock;
import net.nwtg.taleofbiomes.block.ThatchBlockBlock;
import net.nwtg.taleofbiomes.block.TallGrass2Block;
import net.nwtg.taleofbiomes.block.TallGrass1Block;
import net.nwtg.taleofbiomes.block.TallGrass0Block;
import net.nwtg.taleofbiomes.block.StrippedPiruffWoodBlock;
import net.nwtg.taleofbiomes.block.StrippedPiruffLogBlock;
import net.nwtg.taleofbiomes.block.StoneBlock;
import net.nwtg.taleofbiomes.block.SolarPannelBlock;
import net.nwtg.taleofbiomes.block.ShaleWallBlock;
import net.nwtg.taleofbiomes.block.ShaleStairsBlock;
import net.nwtg.taleofbiomes.block.ShaleSlabBlock;
import net.nwtg.taleofbiomes.block.ShalePressurePlateBlock;
import net.nwtg.taleofbiomes.block.ShaleFossilBlock;
import net.nwtg.taleofbiomes.block.ShaleButtonBlock;
import net.nwtg.taleofbiomes.block.ShaleBlock;
import net.nwtg.taleofbiomes.block.SandBlock;
import net.nwtg.taleofbiomes.block.RoseShrubBlock;
import net.nwtg.taleofbiomes.block.RiceCrop7Block;
import net.nwtg.taleofbiomes.block.RiceCrop6Block;
import net.nwtg.taleofbiomes.block.RiceCrop5Block;
import net.nwtg.taleofbiomes.block.RiceCrop4Block;
import net.nwtg.taleofbiomes.block.RiceCrop3Block;
import net.nwtg.taleofbiomes.block.RiceCrop2Block;
import net.nwtg.taleofbiomes.block.RiceCrop1Block;
import net.nwtg.taleofbiomes.block.RiceCrop0Block;
import net.nwtg.taleofbiomes.block.QuicklimeBlockBlock;
import net.nwtg.taleofbiomes.block.PurplePiruffBedTopBlock;
import net.nwtg.taleofbiomes.block.PurplePiruffBedBlock;
import net.nwtg.taleofbiomes.block.PurpleAsterFlowerPotBlock;
import net.nwtg.taleofbiomes.block.PurpleAsterBlock;
import net.nwtg.taleofbiomes.block.PureCopperDustBlockBlock;
import net.nwtg.taleofbiomes.block.PureCoalOreBlock;
import net.nwtg.taleofbiomes.block.PolishedShaleWallBlock;
import net.nwtg.taleofbiomes.block.PolishedShaleStairsBlock;
import net.nwtg.taleofbiomes.block.PolishedShaleSlabBlock;
import net.nwtg.taleofbiomes.block.PolishedShaleBlock;
import net.nwtg.taleofbiomes.block.PolishedMarbleWallBlock;
import net.nwtg.taleofbiomes.block.PolishedMarbleStairsBlock;
import net.nwtg.taleofbiomes.block.PolishedMarbleSlabBlock;
import net.nwtg.taleofbiomes.block.PolishedMarbleBlock;
import net.nwtg.taleofbiomes.block.PolishedBasaltWallBlock;
import net.nwtg.taleofbiomes.block.PolishedBasaltStairsBlock;
import net.nwtg.taleofbiomes.block.PolishedBasaltSlabBlock;
import net.nwtg.taleofbiomes.block.PolishedBasaltBlock;
import net.nwtg.taleofbiomes.block.PlotBlueprintBlock;
import net.nwtg.taleofbiomes.block.PiruffWoodBlock;
import net.nwtg.taleofbiomes.block.PiruffVinesBlock;
import net.nwtg.taleofbiomes.block.PiruffTrapdoorBlock;
import net.nwtg.taleofbiomes.block.PiruffStairsBlock;
import net.nwtg.taleofbiomes.block.PiruffSlabBlock;
import net.nwtg.taleofbiomes.block.PiruffSaplingBlock;
import net.nwtg.taleofbiomes.block.PiruffPressurePlateBlock;
import net.nwtg.taleofbiomes.block.PiruffPlanksBlock;
import net.nwtg.taleofbiomes.block.PiruffLogBlock;
import net.nwtg.taleofbiomes.block.PiruffLeavesBlock;
import net.nwtg.taleofbiomes.block.PiruffFenceGateBlock;
import net.nwtg.taleofbiomes.block.PiruffFenceBlock;
import net.nwtg.taleofbiomes.block.PiruffDoorBlock;
import net.nwtg.taleofbiomes.block.PiruffButtonBlock;
import net.nwtg.taleofbiomes.block.PhosphoriteStoneBlock;
import net.nwtg.taleofbiomes.block.PhosphoriteShovelBlockBlock;
import net.nwtg.taleofbiomes.block.PhosphoriteRakeBlockBlock;
import net.nwtg.taleofbiomes.block.PhosphoriteHoeBlockBlock;
import net.nwtg.taleofbiomes.block.PhosphoriteCrystalTopBlock;
import net.nwtg.taleofbiomes.block.PhosphoriteCrystalBottomBlock;
import net.nwtg.taleofbiomes.block.PhosphoriteCrystalBlock;
import net.nwtg.taleofbiomes.block.PackedDirtBlock;
import net.nwtg.taleofbiomes.block.MossyCobbledShaleWallBlock;
import net.nwtg.taleofbiomes.block.MossyCobbledShaleStairsBlock;
import net.nwtg.taleofbiomes.block.MossyCobbledShaleSlabBlock;
import net.nwtg.taleofbiomes.block.MossyCobbledShaleBlock;
import net.nwtg.taleofbiomes.block.MossyCobbledMarbleWallBlock;
import net.nwtg.taleofbiomes.block.MossyCobbledMarbleStairsBlock;
import net.nwtg.taleofbiomes.block.MossyCobbledMarbleSlabBlock;
import net.nwtg.taleofbiomes.block.MossyCobbledMarbleBlock;
import net.nwtg.taleofbiomes.block.MossyCobbledBasaltWallBlock;
import net.nwtg.taleofbiomes.block.MossyCobbledBasaltStairsBlock;
import net.nwtg.taleofbiomes.block.MossyCobbledBasaltSlabBlock;
import net.nwtg.taleofbiomes.block.MossyCobbledBasaltBlock;
import net.nwtg.taleofbiomes.block.MossCarpetBlock;
import net.nwtg.taleofbiomes.block.MossBlockBlock;
import net.nwtg.taleofbiomes.block.MixedCopperDustBlockBlock;
import net.nwtg.taleofbiomes.block.MarbleWallBlock;
import net.nwtg.taleofbiomes.block.MarbleStairsBlock;
import net.nwtg.taleofbiomes.block.MarbleSlabBlock;
import net.nwtg.taleofbiomes.block.MarblePressurePlateBlock;
import net.nwtg.taleofbiomes.block.MarbleButtonBlock;
import net.nwtg.taleofbiomes.block.MarbleBlock;
import net.nwtg.taleofbiomes.block.MagentaPiruffBedTopBlock;
import net.nwtg.taleofbiomes.block.MagentaPiruffBedBlock;
import net.nwtg.taleofbiomes.block.MagentaAsterFlowerPotBlock;
import net.nwtg.taleofbiomes.block.MagentaAsterBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableXCBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableXBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableTXCCBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableTXCBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableTXBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableTCBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableTBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableSBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableNBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableLTCBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableLTBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableLCCBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableLCBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableLBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableIBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableFBlock;
import net.nwtg.taleofbiomes.block.LowCapacityCableEBlock;
import net.nwtg.taleofbiomes.block.LimestoneBlock;
import net.nwtg.taleofbiomes.block.LightPurplePiruffBedTopBlock;
import net.nwtg.taleofbiomes.block.LightPurplePiruffBedBlock;
import net.nwtg.taleofbiomes.block.LargeBricksBlock;
import net.nwtg.taleofbiomes.block.LargeBrickWallBlock;
import net.nwtg.taleofbiomes.block.LargeBrickStairsBlock;
import net.nwtg.taleofbiomes.block.LargeBrickSlabBlock;
import net.nwtg.taleofbiomes.block.LargeBrickPressurePlateBlock;
import net.nwtg.taleofbiomes.block.LargeBrickButtonBlock;
import net.nwtg.taleofbiomes.block.KilnLadderBlock;
import net.nwtg.taleofbiomes.block.KilnFurnaceOnBlock;
import net.nwtg.taleofbiomes.block.KilnFurnaceBlock;
import net.nwtg.taleofbiomes.block.KilnBlockMiddleTopBlock;
import net.nwtg.taleofbiomes.block.KilnBlockMiddleCenterBlock;
import net.nwtg.taleofbiomes.block.KilnBlockMiddleBottomBlock;
import net.nwtg.taleofbiomes.block.KilnBlockFoundationBlock;
import net.nwtg.taleofbiomes.block.KilnBlockCornerTopBlock;
import net.nwtg.taleofbiomes.block.KilnBlockCornerCenterBlock;
import net.nwtg.taleofbiomes.block.KilnBlockCornerBottomBlock;
import net.nwtg.taleofbiomes.block.IvyShrubBlock;
import net.nwtg.taleofbiomes.block.HayStrawBlock;
import net.nwtg.taleofbiomes.block.HayGrassBlock;
import net.nwtg.taleofbiomes.block.HangingLanternOnBlock;
import net.nwtg.taleofbiomes.block.HangingLanternBlock;
import net.nwtg.taleofbiomes.block.GroundLanternOnBlock;
import net.nwtg.taleofbiomes.block.GroundLanternBlock;
import net.nwtg.taleofbiomes.block.GravelBlock;
import net.nwtg.taleofbiomes.block.GrassBlockBlock;
import net.nwtg.taleofbiomes.block.GoldenrodFlowerPotBlock;
import net.nwtg.taleofbiomes.block.GoldenrodBlock;
import net.nwtg.taleofbiomes.block.GhostBush3Block;
import net.nwtg.taleofbiomes.block.GhostBush2Block;
import net.nwtg.taleofbiomes.block.GhostBush1Block;
import net.nwtg.taleofbiomes.block.GhostBush0Block;
import net.nwtg.taleofbiomes.block.FertileSoilBlock;
import net.nwtg.taleofbiomes.block.DrillBlock;
import net.nwtg.taleofbiomes.block.DoorBlueprintBlock;
import net.nwtg.taleofbiomes.block.DirtBlock;
import net.nwtg.taleofbiomes.block.CopperBattery4Block;
import net.nwtg.taleofbiomes.block.CopperBattery3Block;
import net.nwtg.taleofbiomes.block.CopperBattery2Block;
import net.nwtg.taleofbiomes.block.CopperBattery1Block;
import net.nwtg.taleofbiomes.block.CopperBattery0Block;
import net.nwtg.taleofbiomes.block.CobbledShaleWallBlock;
import net.nwtg.taleofbiomes.block.CobbledShaleStairsBlock;
import net.nwtg.taleofbiomes.block.CobbledShaleSlabBlock;
import net.nwtg.taleofbiomes.block.CobbledShaleBlock;
import net.nwtg.taleofbiomes.block.CobbledMarbleWallBlock;
import net.nwtg.taleofbiomes.block.CobbledMarbleStairsBlock;
import net.nwtg.taleofbiomes.block.CobbledMarbleSlabBlock;
import net.nwtg.taleofbiomes.block.CobbledMarbleBlock;
import net.nwtg.taleofbiomes.block.CobbledLimestoneBlock;
import net.nwtg.taleofbiomes.block.CobbledBasaltWallBlock;
import net.nwtg.taleofbiomes.block.CobbledBasaltStairsBlock;
import net.nwtg.taleofbiomes.block.CobbledBasaltSlabBlock;
import net.nwtg.taleofbiomes.block.CobbledBasaltBlock;
import net.nwtg.taleofbiomes.block.ClayBlockBlock;
import net.nwtg.taleofbiomes.block.BricksBlock;
import net.nwtg.taleofbiomes.block.BrickWallBlock;
import net.nwtg.taleofbiomes.block.BrickStairsBlock;
import net.nwtg.taleofbiomes.block.BrickSlabBlock;
import net.nwtg.taleofbiomes.block.BrickPressurePlateBlock;
import net.nwtg.taleofbiomes.block.BrickButtonBlock;
import net.nwtg.taleofbiomes.block.BluePiruffBedTopBlock;
import net.nwtg.taleofbiomes.block.BluePiruffBedBlock;
import net.nwtg.taleofbiomes.block.BlueAsterFlowerPotBlock;
import net.nwtg.taleofbiomes.block.BlueAsterBlock;
import net.nwtg.taleofbiomes.block.BasicToolTableBlock;
import net.nwtg.taleofbiomes.block.BasicStoneTableBlock;
import net.nwtg.taleofbiomes.block.BasaltWallBlock;
import net.nwtg.taleofbiomes.block.BasaltStairsBlock;
import net.nwtg.taleofbiomes.block.BasaltSlabBlock;
import net.nwtg.taleofbiomes.block.BasaltPressurePlateBlock;
import net.nwtg.taleofbiomes.block.BasaltButtonBlock;
import net.nwtg.taleofbiomes.block.BasaltBlock;
import net.nwtg.taleofbiomes.TaleOfBiomesMod;

import net.neoforged.neoforge.registries.DeferredRegister;
import net.neoforged.neoforge.registries.DeferredHolder;
import net.neoforged.neoforge.client.event.RegisterColorHandlersEvent;
import net.neoforged.fml.common.Mod;
import net.neoforged.bus.api.SubscribeEvent;
import net.neoforged.api.distmarker.Dist;

import net.minecraft.world.level.block.Block;
import net.minecraft.core.registries.BuiltInRegistries;

public class TaleOfBiomesModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(BuiltInRegistries.BLOCK, TaleOfBiomesMod.MODID);
	public static final DeferredHolder<Block, Block> GRASS_BLOCK = REGISTRY.register("grass_block", () -> new GrassBlockBlock());
	public static final DeferredHolder<Block, Block> DIRT = REGISTRY.register("dirt", () -> new DirtBlock());
	public static final DeferredHolder<Block, Block> BLUE_ASTER = REGISTRY.register("blue_aster", () -> new BlueAsterBlock());
	public static final DeferredHolder<Block, Block> PURPLE_ASTER = REGISTRY.register("purple_aster", () -> new PurpleAsterBlock());
	public static final DeferredHolder<Block, Block> MAGENTA_ASTER = REGISTRY.register("magenta_aster", () -> new MagentaAsterBlock());
	public static final DeferredHolder<Block, Block> BLUE_ASTER_FLOWER_POT = REGISTRY.register("blue_aster_flower_pot", () -> new BlueAsterFlowerPotBlock());
	public static final DeferredHolder<Block, Block> PURPLE_ASTER_FLOWER_POT = REGISTRY.register("purple_aster_flower_pot", () -> new PurpleAsterFlowerPotBlock());
	public static final DeferredHolder<Block, Block> MAGENTA_ASTER_FLOWER_POT = REGISTRY.register("magenta_aster_flower_pot", () -> new MagentaAsterFlowerPotBlock());
	public static final DeferredHolder<Block, Block> GOLDENROD = REGISTRY.register("goldenrod", () -> new GoldenrodBlock());
	public static final DeferredHolder<Block, Block> GOLDENROD_FLOWER_POT = REGISTRY.register("goldenrod_flower_pot", () -> new GoldenrodFlowerPotBlock());
	public static final DeferredHolder<Block, Block> WILD_INDIGO = REGISTRY.register("wild_indigo", () -> new WildIndigoBlock());
	public static final DeferredHolder<Block, Block> WILD_INDIGO_FLOWER_POT = REGISTRY.register("wild_indigo_flower_pot", () -> new WildIndigoFlowerPotBlock());
	public static final DeferredHolder<Block, Block> STONE = REGISTRY.register("stone", () -> new StoneBlock());
	public static final DeferredHolder<Block, Block> SAND = REGISTRY.register("sand", () -> new SandBlock());
	public static final DeferredHolder<Block, Block> FERTILE_SOIL = REGISTRY.register("fertile_soil", () -> new FertileSoilBlock());
	public static final DeferredHolder<Block, Block> TILLED_SOIL = REGISTRY.register("tilled_soil", () -> new TilledSoilBlock());
	public static final DeferredHolder<Block, Block> TALL_GRASS_0 = REGISTRY.register("tall_grass_0", () -> new TallGrass0Block());
	public static final DeferredHolder<Block, Block> TALL_GRASS_1 = REGISTRY.register("tall_grass_1", () -> new TallGrass1Block());
	public static final DeferredHolder<Block, Block> TALL_GRASS_2 = REGISTRY.register("tall_grass_2", () -> new TallGrass2Block());
	public static final DeferredHolder<Block, Block> IVY_SHRUB = REGISTRY.register("ivy_shrub", () -> new IvyShrubBlock());
	public static final DeferredHolder<Block, Block> ROSE_SHRUB = REGISTRY.register("rose_shrub", () -> new RoseShrubBlock());
	public static final DeferredHolder<Block, Block> PURE_COAL_ORE = REGISTRY.register("pure_coal_ore", () -> new PureCoalOreBlock());
	public static final DeferredHolder<Block, Block> GRAVEL = REGISTRY.register("gravel", () -> new GravelBlock());
	public static final DeferredHolder<Block, Block> PHOSPHORITE_STONE = REGISTRY.register("phosphorite_stone", () -> new PhosphoriteStoneBlock());
	public static final DeferredHolder<Block, Block> PHOSPHORITE_CRYSTAL = REGISTRY.register("phosphorite_crystal", () -> new PhosphoriteCrystalBlock());
	public static final DeferredHolder<Block, Block> PHOSPHORITE_CRYSTAL_BOTTOM = REGISTRY.register("phosphorite_crystal_bottom", () -> new PhosphoriteCrystalBottomBlock());
	public static final DeferredHolder<Block, Block> PHOSPHORITE_CRYSTAL_TOP = REGISTRY.register("phosphorite_crystal_top", () -> new PhosphoriteCrystalTopBlock());
	public static final DeferredHolder<Block, Block> PIRUFF_LOG = REGISTRY.register("piruff_log", () -> new PiruffLogBlock());
	public static final DeferredHolder<Block, Block> PIRUFF_LEAVES = REGISTRY.register("piruff_leaves", () -> new PiruffLeavesBlock());
	public static final DeferredHolder<Block, Block> PIRUFF_WOOD = REGISTRY.register("piruff_wood", () -> new PiruffWoodBlock());
	public static final DeferredHolder<Block, Block> CLAY_BLOCK = REGISTRY.register("clay_block", () -> new ClayBlockBlock());
	public static final DeferredHolder<Block, Block> BRICKS = REGISTRY.register("bricks", () -> new BricksBlock());
	public static final DeferredHolder<Block, Block> LARGE_BRICKS = REGISTRY.register("large_bricks", () -> new LargeBricksBlock());
	public static final DeferredHolder<Block, Block> LARGE_BRICK_WALL = REGISTRY.register("large_brick_wall", () -> new LargeBrickWallBlock());
	public static final DeferredHolder<Block, Block> LARGE_BRICK_PRESSURE_PLATE = REGISTRY.register("large_brick_pressure_plate", () -> new LargeBrickPressurePlateBlock());
	public static final DeferredHolder<Block, Block> LARGE_BRICK_BUTTON = REGISTRY.register("large_brick_button", () -> new LargeBrickButtonBlock());
	public static final DeferredHolder<Block, Block> BRICK_STAIRS = REGISTRY.register("brick_stairs", () -> new BrickStairsBlock());
	public static final DeferredHolder<Block, Block> BRICK_SLAB = REGISTRY.register("brick_slab", () -> new BrickSlabBlock());
	public static final DeferredHolder<Block, Block> BRICK_WALL = REGISTRY.register("brick_wall", () -> new BrickWallBlock());
	public static final DeferredHolder<Block, Block> BRICK_PRESSURE_PLATE = REGISTRY.register("brick_pressure_plate", () -> new BrickPressurePlateBlock());
	public static final DeferredHolder<Block, Block> BRICK_BUTTON = REGISTRY.register("brick_button", () -> new BrickButtonBlock());
	public static final DeferredHolder<Block, Block> LIMESTONE = REGISTRY.register("limestone", () -> new LimestoneBlock());
	public static final DeferredHolder<Block, Block> COBBLED_LIMESTONE = REGISTRY.register("cobbled_limestone", () -> new CobbledLimestoneBlock());
	public static final DeferredHolder<Block, Block> QUICKLIME_BLOCK = REGISTRY.register("quicklime_block", () -> new QuicklimeBlockBlock());
	public static final DeferredHolder<Block, Block> KILN_FURNACE = REGISTRY.register("kiln_furnace", () -> new KilnFurnaceBlock());
	public static final DeferredHolder<Block, Block> KILN_FURNACE_ON = REGISTRY.register("kiln_furnace_on", () -> new KilnFurnaceOnBlock());
	public static final DeferredHolder<Block, Block> KILN_LADDER = REGISTRY.register("kiln_ladder", () -> new KilnLadderBlock());
	public static final DeferredHolder<Block, Block> KILN_BLOCK_CORNER_BOTTOM = REGISTRY.register("kiln_block_corner_bottom", () -> new KilnBlockCornerBottomBlock());
	public static final DeferredHolder<Block, Block> KILN_BLOCK_CORNER_CENTER = REGISTRY.register("kiln_block_corner_center", () -> new KilnBlockCornerCenterBlock());
	public static final DeferredHolder<Block, Block> KILN_BLOCK_CORNER_TOP = REGISTRY.register("kiln_block_corner_top", () -> new KilnBlockCornerTopBlock());
	public static final DeferredHolder<Block, Block> KILN_BLOCK_MIDDLE_BOTTOM = REGISTRY.register("kiln_block_middle_bottom", () -> new KilnBlockMiddleBottomBlock());
	public static final DeferredHolder<Block, Block> KILN_BLOCK_MIDDLE_CENTER = REGISTRY.register("kiln_block_middle_center", () -> new KilnBlockMiddleCenterBlock());
	public static final DeferredHolder<Block, Block> KILN_BLOCK_MIDDLE_TOP = REGISTRY.register("kiln_block_middle_top", () -> new KilnBlockMiddleTopBlock());
	public static final DeferredHolder<Block, Block> KILN_BLOCK_FOUNDATION = REGISTRY.register("kiln_block_foundation", () -> new KilnBlockFoundationBlock());
	public static final DeferredHolder<Block, Block> RICE_CROP_0 = REGISTRY.register("rice_crop_0", () -> new RiceCrop0Block());
	public static final DeferredHolder<Block, Block> RICE_CROP_1 = REGISTRY.register("rice_crop_1", () -> new RiceCrop1Block());
	public static final DeferredHolder<Block, Block> RICE_CROP_2 = REGISTRY.register("rice_crop_2", () -> new RiceCrop2Block());
	public static final DeferredHolder<Block, Block> RICE_CROP_3 = REGISTRY.register("rice_crop_3", () -> new RiceCrop3Block());
	public static final DeferredHolder<Block, Block> RICE_CROP_4 = REGISTRY.register("rice_crop_4", () -> new RiceCrop4Block());
	public static final DeferredHolder<Block, Block> RICE_CROP_5 = REGISTRY.register("rice_crop_5", () -> new RiceCrop5Block());
	public static final DeferredHolder<Block, Block> RICE_CROP_6 = REGISTRY.register("rice_crop_6", () -> new RiceCrop6Block());
	public static final DeferredHolder<Block, Block> RICE_CROP_7 = REGISTRY.register("rice_crop_7", () -> new RiceCrop7Block());
	public static final DeferredHolder<Block, Block> STRIPPED_PIRUFF_LOG = REGISTRY.register("stripped_piruff_log", () -> new StrippedPiruffLogBlock());
	public static final DeferredHolder<Block, Block> STRIPPED_PIRUFF_WOOD = REGISTRY.register("stripped_piruff_wood", () -> new StrippedPiruffWoodBlock());
	public static final DeferredHolder<Block, Block> PIRUFF_PLANKS = REGISTRY.register("piruff_planks", () -> new PiruffPlanksBlock());
	public static final DeferredHolder<Block, Block> PIRUFF_DOOR = REGISTRY.register("piruff_door", () -> new PiruffDoorBlock());
	public static final DeferredHolder<Block, Block> PIRUFF_TRAPDOOR = REGISTRY.register("piruff_trapdoor", () -> new PiruffTrapdoorBlock());
	public static final DeferredHolder<Block, Block> PIRUFF_FENCE = REGISTRY.register("piruff_fence", () -> new PiruffFenceBlock());
	public static final DeferredHolder<Block, Block> PIRUFF_FENCE_GATE = REGISTRY.register("piruff_fence_gate", () -> new PiruffFenceGateBlock());
	public static final DeferredHolder<Block, Block> PIRUFF_BUTTON = REGISTRY.register("piruff_button", () -> new PiruffButtonBlock());
	public static final DeferredHolder<Block, Block> PIRUFF_PRESSURE_PLATE = REGISTRY.register("piruff_pressure_plate", () -> new PiruffPressurePlateBlock());
	public static final DeferredHolder<Block, Block> PIRUFF_STAIRS = REGISTRY.register("piruff_stairs", () -> new PiruffStairsBlock());
	public static final DeferredHolder<Block, Block> PIRUFF_SLAB = REGISTRY.register("piruff_slab", () -> new PiruffSlabBlock());
	public static final DeferredHolder<Block, Block> HAY_GRASS = REGISTRY.register("hay_grass", () -> new HayGrassBlock());
	public static final DeferredHolder<Block, Block> HAY_STRAW = REGISTRY.register("hay_straw", () -> new HayStrawBlock());
	public static final DeferredHolder<Block, Block> THATCH_BLOCK = REGISTRY.register("thatch_block", () -> new ThatchBlockBlock());
	public static final DeferredHolder<Block, Block> THATCH_STAIRS = REGISTRY.register("thatch_stairs", () -> new ThatchStairsBlock());
	public static final DeferredHolder<Block, Block> THATCH_SLAB = REGISTRY.register("thatch_slab", () -> new ThatchSlabBlock());
	public static final DeferredHolder<Block, Block> LARGE_BRICK_STAIRS = REGISTRY.register("large_brick_stairs", () -> new LargeBrickStairsBlock());
	public static final DeferredHolder<Block, Block> LARGE_BRICK_SLAB = REGISTRY.register("large_brick_slab", () -> new LargeBrickSlabBlock());
	public static final DeferredHolder<Block, Block> PACKED_DIRT = REGISTRY.register("packed_dirt", () -> new PackedDirtBlock());
	public static final DeferredHolder<Block, Block> PLOT_BLUEPRINT = REGISTRY.register("plot_blueprint", () -> new PlotBlueprintBlock());
	public static final DeferredHolder<Block, Block> WALL_BLUEPRINT = REGISTRY.register("wall_blueprint", () -> new WallBlueprintBlock());
	public static final DeferredHolder<Block, Block> DOOR_BLUEPRINT = REGISTRY.register("door_blueprint", () -> new DoorBlueprintBlock());
	public static final DeferredHolder<Block, Block> WINDOW_BLUEPRINT = REGISTRY.register("window_blueprint", () -> new WindowBlueprintBlock());
	public static final DeferredHolder<Block, Block> HANGING_LANTERN = REGISTRY.register("hanging_lantern", () -> new HangingLanternBlock());
	public static final DeferredHolder<Block, Block> HANGING_LANTERN_ON = REGISTRY.register("hanging_lantern_on", () -> new HangingLanternOnBlock());
	public static final DeferredHolder<Block, Block> GROUND_LANTERN = REGISTRY.register("ground_lantern", () -> new GroundLanternBlock());
	public static final DeferredHolder<Block, Block> GROUND_LANTERN_ON = REGISTRY.register("ground_lantern_on", () -> new GroundLanternOnBlock());
	public static final DeferredHolder<Block, Block> TOOL_HANDLE_BLOCK = REGISTRY.register("tool_handle_block", () -> new ToolHandleBlockBlock());
	public static final DeferredHolder<Block, Block> PHOSPHORITE_HOE_BLOCK = REGISTRY.register("phosphorite_hoe_block", () -> new PhosphoriteHoeBlockBlock());
	public static final DeferredHolder<Block, Block> PHOSPHORITE_SHOVEL_BLOCK = REGISTRY.register("phosphorite_shovel_block", () -> new PhosphoriteShovelBlockBlock());
	public static final DeferredHolder<Block, Block> PHOSPHORITE_RAKE_BLOCK = REGISTRY.register("phosphorite_rake_block", () -> new PhosphoriteRakeBlockBlock());
	public static final DeferredHolder<Block, Block> YELLOW_PIRUFF_BED = REGISTRY.register("yellow_piruff_bed", () -> new YellowPiruffBedBlock());
	public static final DeferredHolder<Block, Block> YELLOW_PIRUFF_BED_TOP = REGISTRY.register("yellow_piruff_bed_top", () -> new YellowPiruffBedTopBlock());
	public static final DeferredHolder<Block, Block> BLUE_PIRUFF_BED = REGISTRY.register("blue_piruff_bed", () -> new BluePiruffBedBlock());
	public static final DeferredHolder<Block, Block> BLUE_PIRUFF_BED_TOP = REGISTRY.register("blue_piruff_bed_top", () -> new BluePiruffBedTopBlock());
	public static final DeferredHolder<Block, Block> LIGHT_PURPLE_PIRUFF_BED = REGISTRY.register("light_purple_piruff_bed", () -> new LightPurplePiruffBedBlock());
	public static final DeferredHolder<Block, Block> LIGHT_PURPLE_PIRUFF_BED_TOP = REGISTRY.register("light_purple_piruff_bed_top", () -> new LightPurplePiruffBedTopBlock());
	public static final DeferredHolder<Block, Block> MAGENTA_PIRUFF_BED = REGISTRY.register("magenta_piruff_bed", () -> new MagentaPiruffBedBlock());
	public static final DeferredHolder<Block, Block> MAGENTA_PIRUFF_BED_TOP = REGISTRY.register("magenta_piruff_bed_top", () -> new MagentaPiruffBedTopBlock());
	public static final DeferredHolder<Block, Block> PURPLE_PIRUFF_BED = REGISTRY.register("purple_piruff_bed", () -> new PurplePiruffBedBlock());
	public static final DeferredHolder<Block, Block> PURPLE_PIRUFF_BED_TOP = REGISTRY.register("purple_piruff_bed_top", () -> new PurplePiruffBedTopBlock());
	public static final DeferredHolder<Block, Block> BASIC_TOOL_TABLE = REGISTRY.register("basic_tool_table", () -> new BasicToolTableBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_N = REGISTRY.register("low_capacity_cable_n", () -> new LowCapacityCableNBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_E = REGISTRY.register("low_capacity_cable_e", () -> new LowCapacityCableEBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_I = REGISTRY.register("low_capacity_cable_i", () -> new LowCapacityCableIBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_L = REGISTRY.register("low_capacity_cable_l", () -> new LowCapacityCableLBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_LC = REGISTRY.register("low_capacity_cable_lc", () -> new LowCapacityCableLCBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_LCC = REGISTRY.register("low_capacity_cable_lcc", () -> new LowCapacityCableLCCBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_LT = REGISTRY.register("low_capacity_cable_lt", () -> new LowCapacityCableLTBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_LTC = REGISTRY.register("low_capacity_cable_ltc", () -> new LowCapacityCableLTCBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_T = REGISTRY.register("low_capacity_cable_t", () -> new LowCapacityCableTBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_TC = REGISTRY.register("low_capacity_cable_tc", () -> new LowCapacityCableTCBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_TX = REGISTRY.register("low_capacity_cable_tx", () -> new LowCapacityCableTXBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_TXC = REGISTRY.register("low_capacity_cable_txc", () -> new LowCapacityCableTXCBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_TXCC = REGISTRY.register("low_capacity_cable_txcc", () -> new LowCapacityCableTXCCBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_X = REGISTRY.register("low_capacity_cable_x", () -> new LowCapacityCableXBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_XC = REGISTRY.register("low_capacity_cable_xc", () -> new LowCapacityCableXCBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_F = REGISTRY.register("low_capacity_cable_f", () -> new LowCapacityCableFBlock());
	public static final DeferredHolder<Block, Block> LOW_CAPACITY_CABLE_S = REGISTRY.register("low_capacity_cable_s", () -> new LowCapacityCableSBlock());
	public static final DeferredHolder<Block, Block> MOSS_BLOCK = REGISTRY.register("moss_block", () -> new MossBlockBlock());
	public static final DeferredHolder<Block, Block> MOSS_CARPET = REGISTRY.register("moss_carpet", () -> new MossCarpetBlock());
	public static final DeferredHolder<Block, Block> PIRUFF_VINES = REGISTRY.register("piruff_vines", () -> new PiruffVinesBlock());
	public static final DeferredHolder<Block, Block> SOLAR_PANNEL = REGISTRY.register("solar_pannel", () -> new SolarPannelBlock());
	public static final DeferredHolder<Block, Block> PIRUFF_SAPLING = REGISTRY.register("piruff_sapling", () -> new PiruffSaplingBlock());
	public static final DeferredHolder<Block, Block> COPPER_BATTERY_0 = REGISTRY.register("copper_battery_0", () -> new CopperBattery0Block());
	public static final DeferredHolder<Block, Block> COPPER_BATTERY_1 = REGISTRY.register("copper_battery_1", () -> new CopperBattery1Block());
	public static final DeferredHolder<Block, Block> COPPER_BATTERY_2 = REGISTRY.register("copper_battery_2", () -> new CopperBattery2Block());
	public static final DeferredHolder<Block, Block> COPPER_BATTERY_3 = REGISTRY.register("copper_battery_3", () -> new CopperBattery3Block());
	public static final DeferredHolder<Block, Block> COPPER_BATTERY_4 = REGISTRY.register("copper_battery_4", () -> new CopperBattery4Block());
	public static final DeferredHolder<Block, Block> DRILL = REGISTRY.register("drill", () -> new DrillBlock());
	public static final DeferredHolder<Block, Block> GHOST_BUSH_0 = REGISTRY.register("ghost_bush_0", () -> new GhostBush0Block());
	public static final DeferredHolder<Block, Block> GHOST_BUSH_1 = REGISTRY.register("ghost_bush_1", () -> new GhostBush1Block());
	public static final DeferredHolder<Block, Block> GHOST_BUSH_2 = REGISTRY.register("ghost_bush_2", () -> new GhostBush2Block());
	public static final DeferredHolder<Block, Block> GHOST_BUSH_3 = REGISTRY.register("ghost_bush_3", () -> new GhostBush3Block());
	public static final DeferredHolder<Block, Block> MARBLE = REGISTRY.register("marble", () -> new MarbleBlock());
	public static final DeferredHolder<Block, Block> COBBLED_MARBLE = REGISTRY.register("cobbled_marble", () -> new CobbledMarbleBlock());
	public static final DeferredHolder<Block, Block> MOSSY_COBBLED_MARBLE = REGISTRY.register("mossy_cobbled_marble", () -> new MossyCobbledMarbleBlock());
	public static final DeferredHolder<Block, Block> POLISHED_MARBLE = REGISTRY.register("polished_marble", () -> new PolishedMarbleBlock());
	public static final DeferredHolder<Block, Block> MARBLE_STAIRS = REGISTRY.register("marble_stairs", () -> new MarbleStairsBlock());
	public static final DeferredHolder<Block, Block> MARBLE_SLAB = REGISTRY.register("marble_slab", () -> new MarbleSlabBlock());
	public static final DeferredHolder<Block, Block> MARBLE_WALL = REGISTRY.register("marble_wall", () -> new MarbleWallBlock());
	public static final DeferredHolder<Block, Block> MARBLE_PRESSURE_PLATE = REGISTRY.register("marble_pressure_plate", () -> new MarblePressurePlateBlock());
	public static final DeferredHolder<Block, Block> MARBLE_BUTTON = REGISTRY.register("marble_button", () -> new MarbleButtonBlock());
	public static final DeferredHolder<Block, Block> COBBLED_MARBLE_STAIRS = REGISTRY.register("cobbled_marble_stairs", () -> new CobbledMarbleStairsBlock());
	public static final DeferredHolder<Block, Block> COBBLED_MARBLE_SLAB = REGISTRY.register("cobbled_marble_slab", () -> new CobbledMarbleSlabBlock());
	public static final DeferredHolder<Block, Block> COBBLED_MARBLE_WALL = REGISTRY.register("cobbled_marble_wall", () -> new CobbledMarbleWallBlock());
	public static final DeferredHolder<Block, Block> MOSSY_COBBLED_MARBLE_STAIRS = REGISTRY.register("mossy_cobbled_marble_stairs", () -> new MossyCobbledMarbleStairsBlock());
	public static final DeferredHolder<Block, Block> MOSSY_COBBLED_MARBLE_SLAB = REGISTRY.register("mossy_cobbled_marble_slab", () -> new MossyCobbledMarbleSlabBlock());
	public static final DeferredHolder<Block, Block> MOSSY_COBBLED_MARBLE_WALL = REGISTRY.register("mossy_cobbled_marble_wall", () -> new MossyCobbledMarbleWallBlock());
	public static final DeferredHolder<Block, Block> POLISHED_MARBLE_STAIRS = REGISTRY.register("polished_marble_stairs", () -> new PolishedMarbleStairsBlock());
	public static final DeferredHolder<Block, Block> POLISHED_MARBLE_SLAB = REGISTRY.register("polished_marble_slab", () -> new PolishedMarbleSlabBlock());
	public static final DeferredHolder<Block, Block> POLISHED_MARBLE_WALL = REGISTRY.register("polished_marble_wall", () -> new PolishedMarbleWallBlock());
	public static final DeferredHolder<Block, Block> BASALT = REGISTRY.register("basalt", () -> new BasaltBlock());
	public static final DeferredHolder<Block, Block> BASALT_STAIRS = REGISTRY.register("basalt_stairs", () -> new BasaltStairsBlock());
	public static final DeferredHolder<Block, Block> BASALT_SLAB = REGISTRY.register("basalt_slab", () -> new BasaltSlabBlock());
	public static final DeferredHolder<Block, Block> BASALT_WALL = REGISTRY.register("basalt_wall", () -> new BasaltWallBlock());
	public static final DeferredHolder<Block, Block> BASALT_PRESSURE_PLATE = REGISTRY.register("basalt_pressure_plate", () -> new BasaltPressurePlateBlock());
	public static final DeferredHolder<Block, Block> BASALT_BUTTON = REGISTRY.register("basalt_button", () -> new BasaltButtonBlock());
	public static final DeferredHolder<Block, Block> COBBLED_BASALT = REGISTRY.register("cobbled_basalt", () -> new CobbledBasaltBlock());
	public static final DeferredHolder<Block, Block> COBBLED_BASALT_STAIRS = REGISTRY.register("cobbled_basalt_stairs", () -> new CobbledBasaltStairsBlock());
	public static final DeferredHolder<Block, Block> COBBLED_BASALT_SLAB = REGISTRY.register("cobbled_basalt_slab", () -> new CobbledBasaltSlabBlock());
	public static final DeferredHolder<Block, Block> COBBLED_BASALT_WALL = REGISTRY.register("cobbled_basalt_wall", () -> new CobbledBasaltWallBlock());
	public static final DeferredHolder<Block, Block> MOSSY_COBBLED_BASALT = REGISTRY.register("mossy_cobbled_basalt", () -> new MossyCobbledBasaltBlock());
	public static final DeferredHolder<Block, Block> MOSSY_COBBLED_BASALT_STAIRS = REGISTRY.register("mossy_cobbled_basalt_stairs", () -> new MossyCobbledBasaltStairsBlock());
	public static final DeferredHolder<Block, Block> MOSSY_COBBLED_BASALT_SLAB = REGISTRY.register("mossy_cobbled_basalt_slab", () -> new MossyCobbledBasaltSlabBlock());
	public static final DeferredHolder<Block, Block> MOSSY_COBBLED_BASALT_WALL = REGISTRY.register("mossy_cobbled_basalt_wall", () -> new MossyCobbledBasaltWallBlock());
	public static final DeferredHolder<Block, Block> POLISHED_BASALT = REGISTRY.register("polished_basalt", () -> new PolishedBasaltBlock());
	public static final DeferredHolder<Block, Block> POLISHED_BASALT_STAIRS = REGISTRY.register("polished_basalt_stairs", () -> new PolishedBasaltStairsBlock());
	public static final DeferredHolder<Block, Block> POLISHED_BASALT_SLAB = REGISTRY.register("polished_basalt_slab", () -> new PolishedBasaltSlabBlock());
	public static final DeferredHolder<Block, Block> POLISHED_BASALT_WALL = REGISTRY.register("polished_basalt_wall", () -> new PolishedBasaltWallBlock());
	public static final DeferredHolder<Block, Block> SHALE = REGISTRY.register("shale", () -> new ShaleBlock());
	public static final DeferredHolder<Block, Block> SHALE_STAIRS = REGISTRY.register("shale_stairs", () -> new ShaleStairsBlock());
	public static final DeferredHolder<Block, Block> SHALE_SLAB = REGISTRY.register("shale_slab", () -> new ShaleSlabBlock());
	public static final DeferredHolder<Block, Block> SHALE_WALL = REGISTRY.register("shale_wall", () -> new ShaleWallBlock());
	public static final DeferredHolder<Block, Block> SHALE_PRESSURE_PLATE = REGISTRY.register("shale_pressure_plate", () -> new ShalePressurePlateBlock());
	public static final DeferredHolder<Block, Block> SHALE_BUTTON = REGISTRY.register("shale_button", () -> new ShaleButtonBlock());
	public static final DeferredHolder<Block, Block> SHALE_FOSSIL = REGISTRY.register("shale_fossil", () -> new ShaleFossilBlock());
	public static final DeferredHolder<Block, Block> POLISHED_SHALE = REGISTRY.register("polished_shale", () -> new PolishedShaleBlock());
	public static final DeferredHolder<Block, Block> POLISHED_SHALE_STAIRS = REGISTRY.register("polished_shale_stairs", () -> new PolishedShaleStairsBlock());
	public static final DeferredHolder<Block, Block> POLISHED_SHALE_SLAB = REGISTRY.register("polished_shale_slab", () -> new PolishedShaleSlabBlock());
	public static final DeferredHolder<Block, Block> POLISHED_SHALE_WALL = REGISTRY.register("polished_shale_wall", () -> new PolishedShaleWallBlock());
	public static final DeferredHolder<Block, Block> COBBLED_SHALE = REGISTRY.register("cobbled_shale", () -> new CobbledShaleBlock());
	public static final DeferredHolder<Block, Block> COBBLED_SHALE_STAIRS = REGISTRY.register("cobbled_shale_stairs", () -> new CobbledShaleStairsBlock());
	public static final DeferredHolder<Block, Block> COBBLED_SHALE_SLAB = REGISTRY.register("cobbled_shale_slab", () -> new CobbledShaleSlabBlock());
	public static final DeferredHolder<Block, Block> COBBLED_SHALE_WALL = REGISTRY.register("cobbled_shale_wall", () -> new CobbledShaleWallBlock());
	public static final DeferredHolder<Block, Block> MOSSY_COBBLED_SHALE = REGISTRY.register("mossy_cobbled_shale", () -> new MossyCobbledShaleBlock());
	public static final DeferredHolder<Block, Block> MOSSY_COBBLED_SHALE_STAIRS = REGISTRY.register("mossy_cobbled_shale_stairs", () -> new MossyCobbledShaleStairsBlock());
	public static final DeferredHolder<Block, Block> MOSSY_COBBLED_SHALE_SLAB = REGISTRY.register("mossy_cobbled_shale_slab", () -> new MossyCobbledShaleSlabBlock());
	public static final DeferredHolder<Block, Block> MOSSY_COBBLED_SHALE_WALL = REGISTRY.register("mossy_cobbled_shale_wall", () -> new MossyCobbledShaleWallBlock());
	public static final DeferredHolder<Block, Block> BASIC_STONE_TABLE = REGISTRY.register("basic_stone_table", () -> new BasicStoneTableBlock());
	public static final DeferredHolder<Block, Block> PURE_COPPER_DUST_BLOCK = REGISTRY.register("pure_copper_dust_block", () -> new PureCopperDustBlockBlock());
	public static final DeferredHolder<Block, Block> MIXED_COPPER_DUST_BLOCK = REGISTRY.register("mixed_copper_dust_block", () -> new MixedCopperDustBlockBlock());
	public static final DeferredHolder<Block, Block> UNPURE_COPPER_DUST_BLOCK = REGISTRY.register("unpure_copper_dust_block", () -> new UnpureCopperDustBlockBlock());

	// Start of user code block custom blocks
	// End of user code block custom blocks
	@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
	public static class ClientSideHandler {
		@SubscribeEvent
		public static void blockColorLoad(RegisterColorHandlersEvent.Block event) {
			GrassBlockBlock.blockColorLoad(event);
			TallGrass0Block.blockColorLoad(event);
			TallGrass1Block.blockColorLoad(event);
			TallGrass2Block.blockColorLoad(event);
			PiruffLeavesBlock.blockColorLoad(event);
			HayGrassBlock.blockColorLoad(event);
			MossBlockBlock.blockColorLoad(event);
			MossCarpetBlock.blockColorLoad(event);
			PiruffVinesBlock.blockColorLoad(event);
		}

		@SubscribeEvent
		public static void itemColorLoad(RegisterColorHandlersEvent.Item event) {
			GrassBlockBlock.itemColorLoad(event);
			TallGrass0Block.itemColorLoad(event);
			TallGrass1Block.itemColorLoad(event);
			TallGrass2Block.itemColorLoad(event);
			PiruffLeavesBlock.itemColorLoad(event);
			HayGrassBlock.itemColorLoad(event);
			MossBlockBlock.itemColorLoad(event);
			MossCarpetBlock.itemColorLoad(event);
			PiruffVinesBlock.itemColorLoad(event);
		}
	}
}
